name: "Vendor Compromise: Hijacked Thread with Suspicious Content"
description: "Email contains a hijacked thread from a known sender in your environment, with suspicious content such as signature language or a 3rd-party logo. Highly indicative of vendor compromise."
type: "rule"
severity: "high"
source: |
  type.inbound
  // known sender
  and profile.by_sender().prevalence == "common"
  // image attachment or no attachments
  and (
    (
      length(attachments) > 0
      and all(attachments, .file_type in $file_types_images)
    )
    or length(attachments) == 0
  )
  // body links, but not too many
  and 0 < length(body.links) < 10
  // hijacked thread
  and (
    strings.count(body.html.raw, "<div>") > 100
    or strings.count(body.html.raw, "<br>") > 100
  )
  // suspicious language, or, brand logo in attachment
  and (
    any(file.explode(beta.message_screenshot()),
        strings.ilike(.scan.ocr.raw,
                      "*review*",
                      "*sign*",
                      "*view*",
                      "open",
                      "*completed document*",
                      "*open agreement*",
                      "*open document*"
        )
        and not strings.ilike(.scan.ocr.raw,
                              "*view this email*",
                              "*view*browser*",
                              "*business review*"
        )
    )
    or any(attachments,
           any(ml.logo_detect(.).brands,
               (
                 .name in ("Adobe", "DocuSign", "Dropbox", "GoogleDrive")
                 or strings.icontains(.name, "Microsoft")
               )
               and .confidence == "high"
           )
    )
  )
  // negate replies
  and not (
    (
      strings.istarts_with(subject.subject, "RE:")
      // out of office auto-reply
      // the NLU model will handle these better natively soon
      or strings.istarts_with(subject.subject, "Automatic reply:")
      or regex.imatch(subject.subject,
                      '(\[[^\]]+\]\s?){0,3}(re|fwd?|automat.*)\s?:.*'
      )
    )
    and (
      length(headers.references) > 0
      or any(headers.hops, any(.fields, strings.ilike(.name, "In-Reply-To")))
    )
  )
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )

attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Evasion"
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Computer Vision"
  - "Content analysis"
  - "Header analysis"
  - "HTML analysis"
  - "Optical Character Recognition"
  - "Sender analysis"
id: "651b98f7-dbc7-53ab-9414-27f98922314f"
