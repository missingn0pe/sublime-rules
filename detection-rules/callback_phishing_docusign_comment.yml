name: "Callback Phishing via DocuSign comment"
description: |
  This rule inspects messages originating from legitimate DocuSign infrastructure, with a DocuSign logo that match Callback Phishing criteria, in the body, requiring at least one brand name, as well as 3 matching Callback Phishing terms and a phone number. 
type: "rule"
severity: "high"
source: |
  type.inbound
  and (
    not profile.by_sender().solicited
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  and (
    sender.email.domain.root_domain in $free_email_providers
    or sender.email.domain.root_domain in ("onmicrosoft.com")
    or (
      (
        length(recipients.to) == 0
        or all(recipients.to, .display_name == "Undisclosed recipients")
      )
      and length(recipients.cc) == 0
      and length(recipients.bcc) == 0
    )
  )
  and any(attachments,
          // exclude images taken with mobile cameras and screenshots from android
          .file_type in $file_types_images
          and any(file.explode(.),
                  not any(.scan.exiftool.fields,
                          .key == "Model"
                          or (
                            .key == "Software"
                            and strings.starts_with(.value, "Android")
                          )
                  )
                  // exclude images taken with mobile cameras and screenshots from Apple
                  and not any(.scan.exiftool.fields,
                              .key == "DeviceManufacturer"
                              and .value == "Apple Computer Inc."
                  )
                  and not any(.scan.exiftool.fields,
                              .key == "UserComment" and .value == "Screenshot"
                  )
                  and 4 of (
                    strings.icontains(.scan.ocr.raw, "purchase"),
                    strings.icontains(.scan.ocr.raw, "subscription"),
                    strings.icontains(.scan.ocr.raw, "antivirus"),
                    strings.icontains(.scan.ocr.raw, "order"),
                    strings.icontains(.scan.ocr.raw, "support"),
                    strings.icontains(.scan.ocr.raw, "receipt"),
                    strings.icontains(.scan.ocr.raw, "amount"),
                    strings.icontains(.scan.ocr.raw, "charged"),
                    strings.icontains(.scan.ocr.raw, "invoice"),
                    strings.icontains(.scan.ocr.raw, "call"),
                    strings.icontains(.scan.ocr.raw, "cancel"),
                    strings.icontains(.scan.ocr.raw, "renew"),
                    strings.icontains(.scan.ocr.raw, "refund"),
                    strings.icontains(.scan.ocr.raw, "+1")
                  )
          )
          and any(file.explode(.),
                  regex.icontains(.scan.ocr.raw,
                                  'p.{0,3}a.{0,3}y.{0,3}p.{0,3}a.{0,3}l|mcafee|n[o0]rt[o0]n|geek.{0,5}squad|ebay|symantec|best buy|lifel[o0]c'
                  )
          )
  )

attack_types:
  - "Callback Phishing"
tactics_and_techniques:
  - "Evasion"
  - "Impersonation: Brand"
  - "Out of band pivot"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Computer Vision"
  - "Header analysis"
  - "Sender analysis"
  - "URL analysis"
  
id: "48aec918-d1bb-511e-8eba-8c34a663f28c"
