name: "HR Impersonation via DocuSign comment"
description: "This rule inspects messages originating from legitimate DocuSign infrastructure, with a DocuSign logo and engaging language in the body that matches HR Impersonation criteria."
type: "rule"
severity: "high"
source: "type.inbound\nand length(attachments) == 0\n  \n// Legitimate Docusign sending infratructure\nand (\n    sender.email.domain.root_domain in ('docusign.net', 'docusign.com')\n    // check for SPF or DMARC passed\n    and (headers.auth_summary.spf.pass or headers.auth_summary.dmarc.pass)\n  )\n  \n// Docusign Logo \nand any(ml.logo_detect(beta.message_screenshot()).brands, .name == \"DocuSign\")\n  \n// HR Impersonation in body\nand regex.icontains(body.current_thread.text,\n                      (\n                        '(\\bh\\W?r\\W?\\b|human\\s?resources|hr depart(ment)?|employee relations)'\n                      )\n  )\n\n// Request and Urgency\nand any(ml.nlu_classifier(body.current_thread.text).entities,\n          .name == \"request\"\n  )\nand any(ml.nlu_classifier(body.current_thread.text).entities,\n          .name in (\"urgency\", \"financial\")\n  )\nand (\n    any(ml.nlu_classifier(body.current_thread.text).intents, .name != \"benign\")\n    or length(ml.nlu_classifier(body.current_thread.text).intents) == 0 // not benign but not malicious either\n  )\n\n// Negate legitimate HR docusigns originating from within the org\nand not (\n    all(headers.reply_to, .email.domain.root_domain in $org_domains))\n\n// Negate replies\nand (\n    length(headers.references) == 0\n    or not any(headers.hops, any(.fields, strings.ilike(.name, \"In-Reply-To\"))))\n"
attack_types:
  - "BEC/Fraud"
  - "Credential Phishing"
tactics_and_techniques:
  - "Evasion"
  - "Impersonation: Brand"
  - "Out of band pivot"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Natural Language Understanding"
  - "Sender analysis"
id: "796c6f0f-7571-5b87-b53e-97948e8be474"
testing_pr: 1887
testing_sha: bf60c22f3abb49a70fce8bce662483c066bec5cc
